version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: python-escrow-server
    command: python3 app.py
    ports:
      - "5000:5000"
    volumes:
      - .:/escrow-app-backend
    depends_on:
      - postgres
    env_file:
      - .env

  nginx:
    container_name: nginx
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

  certbot:
    image: certbot/certbot
    container_name: cerbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email bradleykibs@gmail.com -d ems254.live --agree-tos

  rabbitmq:
    image: "rabbitmq:management"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}

#  flower:
#    build: .
#    command: flower -A app.celery
#    ports:
#      - "5555:5555"
#    depends_on:
#      - worker
#    env_file:
#      - .env


  postgres:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - .:/db_volume
    environment:
      - POSTGRES_ROOT_PASSWORD=${PG_ROOT_PASS}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_HOST=${PG_HOST}
      - POSTGRES_PASSWORD=${PG_PWD}
      - POSTGRES_DB=${PG_DB}

  worker:
    build: .
    command: celery -A app.celery worker --loglevel=info
    volumes:
      - .:/celery_app
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}